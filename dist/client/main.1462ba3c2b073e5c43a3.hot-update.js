webpackHotUpdate("main",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./src/shared/TaskList/TaskOverlay/taskoverlay.css":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--6-1!./src/shared/TaskList/TaskOverlay/taskoverlay.css ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \"\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack:///./src/shared/TaskList/TaskOverlay/taskoverlay.css?./node_modules/css-loader/dist/cjs.js??ref--6-1");

/***/ }),

/***/ "./src/shared/TaskList/TaskOverlay/TaskOverlay.tsx":
/*!*********************************************************!*\
  !*** ./src/shared/TaskList/TaskOverlay/TaskOverlay.tsx ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Task = void 0;\r\nconst jsx_runtime_1 = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\r\nconst react_1 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\r\nconst taskoverlay_css_1 = __importDefault(__webpack_require__(/*! ./taskoverlay.css */ \"./src/shared/TaskList/TaskOverlay/taskoverlay.css\"));\r\nconst Icon_1 = __webpack_require__(/*! ../../Icon */ \"./src/shared/Icon/index.ts\");\r\nconst generateRandomIndex_1 = __webpack_require__(/*! ../../../util/react/generateRandomIndex */ \"./src/util/react/generateRandomIndex.tsx\");\r\nconst Dropdown_1 = __webpack_require__(/*! ../../Dropdown */ \"./src/shared/Dropdown/index.ts\");\r\nconst GenericList_1 = __webpack_require__(/*! ../../GenericList */ \"./src/shared/GenericList.tsx\");\r\nconst react_redux_1 = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\r\nconst actions_1 = __webpack_require__(/*! ../../../store/actions */ \"./src/store/actions.ts\");\r\nconst classnames_1 = __importDefault(__webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\"));\r\nconst sortable_1 = __webpack_require__(/*! @dnd-kit/sortable */ \"./node_modules/@dnd-kit/sortable/dist/sortable.esm.js\");\r\nconst utilities_1 = __webpack_require__(/*! @dnd-kit/utilities */ \"./node_modules/@dnd-kit/utilities/dist/utilities.esm.js\");\r\nfunction Task({ text, tomato, id }) {\r\n    const { attributes, listeners, setNodeRef, transition, transform } = (0, sortable_1.useSortable)({ id });\r\n    const dispatch = (0, react_redux_1.useDispatch)();\r\n    const [value, setValue] = (0, react_1.useState)(text);\r\n    const [edit, setEdit] = (0, react_1.useState)(false);\r\n    const editInput = (0, react_1.useRef)(null);\r\n    const startEdit = () => {\r\n        setEdit(true);\r\n        if (editInput.current) {\r\n            editInput.current.focus();\r\n        }\r\n    };\r\n    const changeHandler = (ev) => {\r\n        setValue(ev.target.value);\r\n    };\r\n    const keyDownHandler = (ev) => {\r\n        if (ev.key === 'Escape') {\r\n            setEdit(false);\r\n            setValue(text);\r\n        }\r\n        if (ev.key === 'Enter') {\r\n            setEdit(false);\r\n            dispatch((0, actions_1.editTask)(id, value));\r\n        }\r\n    };\r\n    const LIST = [\r\n        {\r\n            As: 'li',\r\n            text: 'Увеличить',\r\n            icon: 'inc',\r\n            className: taskoverlay_css_1.default.desktop,\r\n            onClick: (ev) => {\r\n                ev.stopPropagation();\r\n                dispatch((0, actions_1.incTomato)(id));\r\n            },\r\n        },\r\n        {\r\n            As: 'li',\r\n            text: 'Уменьшить',\r\n            icon: 'dec',\r\n            className: (0, classnames_1.default)(taskoverlay_css_1.default.desktop, tomato <= 1 ? taskoverlay_css_1.default.disabled : ''),\r\n            onClick: (ev) => {\r\n                ev.stopPropagation();\r\n                if (tomato > 1) {\r\n                    dispatch((0, actions_1.decTomato)(id));\r\n                }\r\n            },\r\n        },\r\n        {\r\n            As: 'li',\r\n            text: 'Редактировать',\r\n            icon: 'edit',\r\n            onClick: () => {\r\n                startEdit();\r\n            },\r\n        },\r\n        {\r\n            As: 'li',\r\n            text: 'Удалить',\r\n            icon: 'delete',\r\n            className: taskoverlay_css_1.default.desktop,\r\n            onClick: () => {\r\n                dispatch((0, actions_1.deleteTask)(id));\r\n            },\r\n        },\r\n    ].map((item) => (Object.assign(Object.assign({}, item), { id: (0, generateRandomIndex_1.generateRandomString)() })));\r\n    return ((0, jsx_runtime_1.jsxs)(\"div\", Object.assign({ className: taskoverlay_css_1.default.wrapper }, { children: [(0, jsx_runtime_1.jsxs)(\"div\", Object.assign({ className: taskoverlay_css_1.default.textWrapper, ref: setNodeRef, style: {\r\n                    transform: utilities_1.CSS.Transform.toString(transform),\r\n                    transition,\r\n                } }, attributes, listeners, transform, { children: [(0, jsx_runtime_1.jsx)(\"span\", Object.assign({ className: taskoverlay_css_1.default.tomato }, { children: tomato })), edit ? ((0, jsx_runtime_1.jsx)(\"input\", { className: taskoverlay_css_1.default.editInput, ref: editInput, type: 'text', value: value, autoFocus: true, onChange: changeHandler, onKeyDown: keyDownHandler })) : (text)] })), (0, jsx_runtime_1.jsx)(Dropdown_1.Dropdown, Object.assign({ button: (0, jsx_runtime_1.jsx)(\"button\", Object.assign({ className: taskoverlay_css_1.default.menuButton }, { children: (0, jsx_runtime_1.jsx)(Icon_1.Icon, { iconName: 'menu' }) })), isOpen: false }, { children: (0, jsx_runtime_1.jsx)(\"ul\", Object.assign({ className: taskoverlay_css_1.default.menuList }, { children: (0, jsx_runtime_1.jsx)(GenericList_1.GenericList, { list: LIST }) })) }))] })));\r\n}\r\nexports.Task = Task;\r\n\n\n//# sourceURL=webpack:///./src/shared/TaskList/TaskOverlay/TaskOverlay.tsx?");

/***/ }),

/***/ "./src/shared/TaskList/TaskOverlay/taskoverlay.css":
/*!*********************************************************!*\
  !*** ./src/shared/TaskList/TaskOverlay/taskoverlay.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!./taskoverlay.css */ \"./node_modules/css-loader/dist/cjs.js?!./src/shared/TaskList/TaskOverlay/taskoverlay.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\nif (true) {\n  if (!content.locals) {\n    module.hot.accept(\n      /*! !../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!./taskoverlay.css */ \"./node_modules/css-loader/dist/cjs.js?!./src/shared/TaskList/TaskOverlay/taskoverlay.css\",\n      function () {\n        var newContent = __webpack_require__(/*! !../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!./taskoverlay.css */ \"./node_modules/css-loader/dist/cjs.js?!./src/shared/TaskList/TaskOverlay/taskoverlay.css\");\n\n              newContent = newContent.__esModule ? newContent.default : newContent;\n\n              if (typeof newContent === 'string') {\n                newContent = [[module.i, newContent, '']];\n              }\n\n              update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}\n\nmodule.exports = exported;\n\n//# sourceURL=webpack:///./src/shared/TaskList/TaskOverlay/taskoverlay.css?");

/***/ })

})